---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Application Builder

on:
  workflow_call:
    inputs:
      app:
        type: string
        description: Application Name
        required: true

jobs:
  plan:
    name: Plan
    runs-on: ubuntu-latest
    outputs:
      app-exists: ${{ steps.app-exists.outputs.exists }}
      platforms: ${{ steps.app-options.outputs.platforms }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Check For Exising Application
        uses: ./.github/actions/app-exists
        id: app-exists
        with:
          app: ${{ inputs.app }}

      - name: Get Application Options
        id: app-options
        uses: ./.github/actions/app-options
        with:
          app: ${{ inputs.app }}

      - name: Get Application Versions
        uses: ./.github/actions/app-versions
        id: app-versions
        with:
          upstream-version: ${{ steps.app-options.outputs.version }}

      - name: Upload Bake Metadata
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ inputs.app }}-bake-metadata
          path: ${{ runner.temp }}/docker-metadata-action-bake.json
          if-no-files-found: error
          retention-days: 1

  build:
    name: Build (${{ matrix.platform }})
    needs: ["plan"]
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJson(needs.plan.outputs.platforms) }}
    runs-on: ${{ startsWith(matrix.platform, 'linux/arm') && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Get Target Architecture
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: target
        with:
          script: |
            core.setOutput('arch', '${{ matrix.platform }}'.split('/').pop());

      - name: Get Application Options
        id: app-options
        uses: ./.github/actions/app-options
        with:
          app: ${{ inputs.app }}

      - name: Download Bake Metadata
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ inputs.app }}-bake-metadata
          path: ${{ runner.temp }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Add Include Directory to Build Context
        run: |
          rsync -a --ignore-existing --progress ./include/ ./apps/${{ inputs.app }}/

      - name: Build Application
        uses: docker/bake-action@37816e747588cb137173af99ab33873600c46ea8 # v6.8.0
        id: bake
        with:
          files: |
            ./docker-bake.hcl
            cwd://${{ runner.temp }}/docker-metadata-action-bake.json
          set: |
            *.args.VENDOR=${{ github.repository_owner }}
            *.cache-from=${{ format('type=registry,ref=ghcr.io/{0}/build_cache:{1}-{2},mode=max', github.repository_owner, inputs.app, steps.target.outputs.arch) }}
            *.cache-to=
            *.labels.org.opencontainers.image.title=${{ inputs.app }}
            *.labels.org.opencontainers.image.url=https://ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}
            *.labels.org.opencontainers.image.version=${{ steps.app-options.outputs.version }}
            *.labels.org.opencontainers.image.revision=${{ github.sha }}
            *.labels.org.opencontainers.image.vendor=${{ github.repository_owner }}
            *.output=type=docker
            *.platform=${{ matrix.platform }}
            *.tags=
          source: .
          targets: image
          workdir: ./apps/${{ inputs.app }}

      - name: Run Application Tests
        uses: ./.github/actions/app-tests
        with:
          app: ${{ inputs.app }}
          image: ${{ fromJSON(steps.bake.outputs.metadata).image['containerimage.config.digest'] }}
          token: ${{ github.token }}
