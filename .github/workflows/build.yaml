name: Build and Push Containers

on:
  push:
    branches: [main]
    paths: ['**/Dockerfile', '**/docker-bake.hcl']
  pull_request:
    branches: [main]
    paths: ['**/Dockerfile', '**/docker-bake.hcl']
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      containers: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Get changed containers
        id: filter
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            # Build all containers on manual trigger
            containers=$(find . -maxdepth 1 -type d -name "[!.]*" | grep -v LICENSE | grep -v README | sort | jq -R -s -c 'split("\n")[:-1] | map(.[2:])')
            echo "changes=$containers" >> $GITHUB_OUTPUT
          else
            # Only build changed containers
            changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} || git diff --name-only HEAD~1)
            containers=$(echo "$changed_files" | grep -E "^[^/]+/(Dockerfile|docker-bake\.hcl)" | cut -d'/' -f1 | sort -u | jq -R -s -c 'split("\n")[:-1] | map(select(length > 0))')
            echo "changes=$containers" >> $GITHUB_OUTPUT
          fi

  build:
    needs: changes
    if: ${{ needs.changes.outputs.containers != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        container: ${{ fromJson(needs.changes.outputs.containers) }}
        platform: ["linux/amd64", "linux/arm64"]
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/bake-action@37816e747588cb137173af99ab33873600c46ea8 # v6
        with:
          workdir: ./${{ matrix.container }}
          targets: ${{ github.event_name == 'pull_request' && 'image-local' || 'image-all' }}
          set: |
            *.platform=${{ matrix.platform }}
            *.output=${{ github.event_name == 'pull_request' && 'type=docker' || 'type=registry' }}
            *.tags=ghcr.io/${{ github.repository_owner }}/${{ matrix.container }}:latest
            *.tags=ghcr.io/${{ github.repository_owner }}/${{ matrix.container }}:${{ github.sha }}